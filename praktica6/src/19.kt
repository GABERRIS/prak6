fun main() {
    // Два отсортированных массива
    val arr1 = intArrayOf(1, 3, 5, 7)
    val arr2 = intArrayOf(2, 4, 6, 8)

    // Создание нового массива для хранения слитых элементов
    val mergedArray = mergeSortedArrays(arr1, arr2)

    // Вывод слитого массива
    println("Слитый отсортированный массив: ${mergedArray.joinToString(", ")}")
}

fun mergeSortedArrays(arr1: IntArray, arr2: IntArray): IntArray {
    // Создание нового массива размером, равным сумме размеров входных массивов
    val mergedArray = IntArray(arr1.size + arr2.size)
    // Индексы для итерации по входным массивам
    var i = 0
    var j = 0
    // Индекс для добавления элементов в слитый массив
    var k = 0

    // Слияние массивов, пока оба массива не будут пройдены
    while (i < arr1.size && j < arr2.size) {
        // Сравнение текущих элементов из обоих массивов
        if (arr1[i] < arr2[j]) {
            // Добавление элемента из первого массива в слитый массив
            mergedArray[k] = arr1[i]
            // Переход к следующему элементу первого массива
            i++
        } else {
            // Добавление элемента из второго массива в слитый массив
            mergedArray[k] = arr2[j]
            // Переход к следующему элементу второго массива
            j++
        }
        // Переход к следующему элементу слитого массива
        k++
    }

    // Добавление оставшихся элементов первого массива (если есть)
    while (i < arr1.size) {
        mergedArray[k] = arr1[i]
        i++
        k++
    }

    // Добавление оставшихся элементов второго массива (если есть)
    while (j < arr2.size) {
        mergedArray[k] = arr2[j]
        j++
        k++
    }

    // Возврат слитого отсортированного массива
    return mergedArray
}